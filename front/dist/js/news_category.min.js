function NewCategory(){}NewCategory.prototype.run=function(){var t=this;t.listenAddCategoryEvent(),t.listenEditCategoryEvent(),t.listenDeleteCategoryEvent()},NewCategory.prototype.listenAddCategoryEvent=function(){var t=$("#add-btn");t.click(function(){t.click(function(){xfzalert.alertOneInput({title:"添加新闻分类",placeholder:"请输入新闻分类",confirmCallback:function(t){xfzajax.post({url:"/cms/add_news_category/",data:{name:t},success:function(t){200===t.code?(console.log(t),window.location.reload()):xfzalert.close()}})}})})})},NewCategory.prototype.listenEditCategoryEvent=function(){$(".edit-btn").click(function(){var t=$(this).parent().parent(),e=t.attr("data-pk"),n=t.attr("data-name");xfzalert.alertOneInput({title:"修改分类名称",placeholder:"请输入新的名称",value:n,confirmCallback:function(t){xfzajax.post({url:"/cms/edit_news_category/",data:{pk:e,name:t},success:function(t){200===t.code?window.location.reload():xfzalert.close()}})}})})},NewCategory.prototype.listenDeleteCategoryEvent=function(){$(".delete-btn").click(function(){var t=$(this).parent().parent().attr("data-pk");xfzalert.alertConfirm({title:"您确认删除该分类吗？",confirmCallback:function(){xfzajax.post({url:"/cms/delete_news_category/",data:{pk:t},success:function(t){200===t.code&&window.location.reload()}})}})})},$(function(){(new NewCategory).run()});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5ld3NfY2F0ZWdvcnkuanMiXSwibmFtZXMiOlsiTmV3Q2F0ZWdvcnkiLCJwcm90b3R5cGUiLCJydW4iLCJzZWxmIiwidGhpcyIsImxpc3RlbkFkZENhdGVnb3J5RXZlbnQiLCJsaXN0ZW5FZGl0Q2F0ZWdvcnlFdmVudCIsImxpc3RlbkRlbGV0ZUNhdGVnb3J5RXZlbnQiLCJhZGRCdG4iLCIkIiwiY2xpY2siLCJ4ZnphbGVydCIsImFsZXJ0T25lSW5wdXQiLCJ0aXRsZSIsInBsYWNlaG9sZGVyIiwiY29uZmlybUNhbGxiYWNrIiwiaW5wdXRWYWx1ZSIsInhmemFqYXgiLCJwb3N0IiwidXJsIiwiZGF0YSIsIm5hbWUiLCJzdWNjZXNzIiwicmVzdWx0IiwiY29uc29sZSIsImxvZyIsIndpbmRvdyIsImxvY2F0aW9uIiwicmVsb2FkIiwiY2xvc2UiLCJ0ciIsInBhcmVudCIsInBrIiwiYXR0ciIsInZhbHVlIiwiYWxlcnRDb25maXJtIl0sIm1hcHBpbmdzIjoiQUFBQSxTQUFTQSxlQUtUQSxZQUFZQyxVQUFVQyxJQUFNLFdBQ3hCLElBQUlDLEVBQU9DLEtBQ1hELEVBQUtFLHlCQUNMRixFQUFLRywwQkFDTEgsRUFBS0ksNkJBSVRQLFlBQVlDLFVBQVVJLHVCQUF5QixXQUMzQyxJQUFJRyxFQUFTQyxFQUFFLFlBQ2ZELEVBQU9FLE1BQU0sV0FDVEYsRUFBT0UsTUFBTSxXQUNUQyxTQUFTQyxjQUFjLENBQ25CQyxNQUFRLFNBQ1JDLFlBQWMsVUFDZEMsZ0JBQWtCLFNBQVVDLEdBQ3hCQyxRQUFRQyxLQUFLLENBQ1RDLElBQU0sMEJBQ05DLEtBQU8sQ0FDSEMsS0FBT0wsR0FFWE0sUUFBVSxTQUFVQyxHQUNNLE1BQW5CQSxFQUFhLE1BQ1pDLFFBQVFDLElBQUlGLEdBQ1pHLE9BQU9DLFNBQVNDLFVBRWhCakIsU0FBU2tCLG1CQVl6QzdCLFlBQVlDLFVBQVVLLHdCQUEwQixXQUM5QkcsRUFBRSxhQUNSQyxNQUFNLFdBQ1YsSUFDSW9CLEVBRGFyQixFQUFFTCxNQUNDMkIsU0FBU0EsU0FDekJDLEVBQUtGLEVBQUdHLEtBQUssV0FDYlosRUFBT1MsRUFBR0csS0FBSyxhQUNuQnRCLFNBQVNDLGNBQWMsQ0FDcEJDLE1BQVEsU0FDUEMsWUFBYyxVQUNkb0IsTUFBUWIsRUFDUk4sZ0JBQWtCLFNBQVVDLEdBQ3hCQyxRQUFRQyxLQUFLLENBQ1ZDLElBQU0sMkJBQ05DLEtBQU8sQ0FDSFksR0FBS0EsRUFDTFgsS0FBT0wsR0FFVk0sUUFBVSxTQUFVQyxHQUNPLE1BQW5CQSxFQUFhLEtBQ2JHLE9BQU9DLFNBQVNDLFNBRWhCakIsU0FBU2tCLGlCQVdyQzdCLFlBQVlDLFVBQVVNLDBCQUE0QixXQUM5QkUsRUFBRSxlQUNSQyxNQUFNLFdBQ1osSUFFSXNCLEVBRmF2QixFQUFFTCxNQUNDMkIsU0FBU0EsU0FDakJFLEtBQUssV0FDakJ0QixTQUFTd0IsYUFBYSxDQUNsQnRCLE1BQVEsYUFDUkUsZ0JBQWtCLFdBQ2RFLFFBQVFDLEtBQUssQ0FDVEMsSUFBTSw2QkFDTkMsS0FBTyxDQUNIWSxHQUFLQSxHQUVUVixRQUFVLFNBQVVDLEdBQ08sTUFBbkJBLEVBQWEsTUFDYkcsT0FBT0MsU0FBU0Msa0JBVTVDbkIsRUFBRSxZQUNpQixJQUFJVCxhQUNWRSIsImZpbGUiOiJuZXdzX2NhdGVnb3J5Lm1pbi5qcyIsInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIE5ld0NhdGVnb3J5KCkge1xuXG59O1xuXG5cbk5ld0NhdGVnb3J5LnByb3RvdHlwZS5ydW4gPSBmdW5jdGlvbiAoKSB7XG4gICAgdmFyIHNlbGYgPSB0aGlzO1xuICAgIHNlbGYubGlzdGVuQWRkQ2F0ZWdvcnlFdmVudCgpO1xuICAgIHNlbGYubGlzdGVuRWRpdENhdGVnb3J5RXZlbnQoKTtcbiAgICBzZWxmLmxpc3RlbkRlbGV0ZUNhdGVnb3J5RXZlbnQoKTtcbn07XG5cbi8vIOa3u+WKoOaWsOmXu+WIhuexu1xuTmV3Q2F0ZWdvcnkucHJvdG90eXBlLmxpc3RlbkFkZENhdGVnb3J5RXZlbnQgPSBmdW5jdGlvbiAoKSB7XG4gICAgdmFyIGFkZEJ0biA9ICQoJyNhZGQtYnRuJyk7XG4gICAgYWRkQnRuLmNsaWNrKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgYWRkQnRuLmNsaWNrKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHhmemFsZXJ0LmFsZXJ0T25lSW5wdXQoe1xuICAgICAgICAgICAgICAgICd0aXRsZSc6J+a3u+WKoOaWsOmXu+WIhuexuycsXG4gICAgICAgICAgICAgICAgJ3BsYWNlaG9sZGVyJzon6K+36L6T5YWl5paw6Ze75YiG57G7JyxcbiAgICAgICAgICAgICAgICAnY29uZmlybUNhbGxiYWNrJzpmdW5jdGlvbiAoaW5wdXRWYWx1ZSkge1xuICAgICAgICAgICAgICAgICAgICB4ZnphamF4LnBvc3Qoe1xuICAgICAgICAgICAgICAgICAgICAgICAgJ3VybCc6Jy9jbXMvYWRkX25ld3NfY2F0ZWdvcnkvJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICdkYXRhJzp7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJ25hbWUnOmlucHV0VmFsdWVcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAnc3VjY2Vzcyc6ZnVuY3Rpb24gKHJlc3VsdCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmKHJlc3VsdFsnY29kZSddID09PSAyMDApe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhyZXN1bHQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aW5kb3cubG9jYXRpb24ucmVsb2FkKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfWVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB4ZnphbGVydC5jbG9zZSgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyB3aW5kb3cubWVzc2FnZUJveC5zaG93RXJyb3IocmVzdWx0WydtZXNzYWdlJ10pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgIH0pO1xufTtcblxuLy/jgIDnvJbovpHmlrDpl7vliIbnsbtcbk5ld0NhdGVnb3J5LnByb3RvdHlwZS5saXN0ZW5FZGl0Q2F0ZWdvcnlFdmVudCA9IGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgZWRpdEJ0biA9ICQoJy5lZGl0LWJ0bicpO1xuICAgIGVkaXRCdG4uY2xpY2soZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgY3VycmVudEJ0biA9ICQodGhpcyk7XG4gICAgICAgIHZhciB0ciA9IGN1cnJlbnRCdG4ucGFyZW50KCkucGFyZW50KCk7XG4gICAgICAgIHZhciBwayA9IHRyLmF0dHIoJ2RhdGEtcGsnKTtcbiAgICAgICAgdmFyIG5hbWUgPSB0ci5hdHRyKCdkYXRhLW5hbWUnKTtcbiAgICAgICAgeGZ6YWxlcnQuYWxlcnRPbmVJbnB1dCh7XG4gICAgICAgICAgICd0aXRsZSc6J+S/ruaUueWIhuexu+WQjeensCcsXG4gICAgICAgICAgICAncGxhY2Vob2xkZXInOifor7fovpPlhaXmlrDnmoTlkI3np7AnLFxuICAgICAgICAgICAgJ3ZhbHVlJzpuYW1lLFxuICAgICAgICAgICAgJ2NvbmZpcm1DYWxsYmFjayc6ZnVuY3Rpb24gKGlucHV0VmFsdWUpIHtcbiAgICAgICAgICAgICAgICB4ZnphamF4LnBvc3Qoe1xuICAgICAgICAgICAgICAgICAgICd1cmwnOicvY21zL2VkaXRfbmV3c19jYXRlZ29yeS8nLFxuICAgICAgICAgICAgICAgICAgICdkYXRhJzp7XG4gICAgICAgICAgICAgICAgICAgICAgICdwayc6cGssXG4gICAgICAgICAgICAgICAgICAgICAgICduYW1lJzppbnB1dFZhbHVlXG4gICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgJ3N1Y2Nlc3MnOmZ1bmN0aW9uIChyZXN1bHQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChyZXN1bHRbJ2NvZGUnXSA9PT0gMjAwKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgd2luZG93LmxvY2F0aW9uLnJlbG9hZCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfWVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHhmemFsZXJ0LmNsb3NlKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH0pO1xufTtcblxuXG4vL+OAgOWIoOmZpOaWsOmXu+WIhuexu1xuTmV3Q2F0ZWdvcnkucHJvdG90eXBlLmxpc3RlbkRlbGV0ZUNhdGVnb3J5RXZlbnQgPSBmdW5jdGlvbiAoKSB7XG4gICAgdmFyIGRlbGV0ZUJ0biA9ICQoJy5kZWxldGUtYnRuJyk7XG4gICAgZGVsZXRlQnRuLmNsaWNrKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIGN1cnJlbnRCdG4gPSAkKHRoaXMpO1xuICAgICAgICB2YXIgdHIgPSBjdXJyZW50QnRuLnBhcmVudCgpLnBhcmVudCgpO1xuICAgICAgICB2YXIgcGsgPSB0ci5hdHRyKCdkYXRhLXBrJyk7XG4gICAgICAgIHhmemFsZXJ0LmFsZXJ0Q29uZmlybSh7XG4gICAgICAgICAgICAndGl0bGUnOifmgqjnoa7orqTliKDpmaTor6XliIbnsbvlkJfvvJ8nLFxuICAgICAgICAgICAgJ2NvbmZpcm1DYWxsYmFjayc6ZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHhmemFqYXgucG9zdCh7XG4gICAgICAgICAgICAgICAgICAgICd1cmwnOicvY21zL2RlbGV0ZV9uZXdzX2NhdGVnb3J5LycsXG4gICAgICAgICAgICAgICAgICAgICdkYXRhJzp7XG4gICAgICAgICAgICAgICAgICAgICAgICAncGsnOnBrXG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICdzdWNjZXNzJzpmdW5jdGlvbiAocmVzdWx0KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAocmVzdWx0Wydjb2RlJ10gPT09IDIwMCl7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgd2luZG93LmxvY2F0aW9uLnJlbG9hZCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH0pO1xufTtcblxuXG4kKGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgY2F0ZWdvcnkgPSBuZXcgTmV3Q2F0ZWdvcnkoKTtcbiAgICBjYXRlZ29yeS5ydW4oKTtcbn0pOyJdfQ==
